<?php

/**
 * @file
 * Provides primary Drupal hook implementations.
 */

/**
 * Implements hook_page_attachments_alter().
 */
function tarte_au_citron_page_attachments_alter(array &$attachments) {
  /**
   * @var \Drupal\tarte_au_citron\ServicesManagerInterface $serviceManager
   */
  $serviceManager = \Drupal::getContainer()
    ->get('tarte_au_citron.services_manager');

  if (!$serviceManager->isNeeded()) {
    return;
  }
  $config = \Drupal::config('tarte_au_citron.settings');
  $data = $config->get();

  $attachments['#attached']['library'][] = 'tarte_au_citron/tarte_au_citron';

  // Attach library services.
  $enabledServices = $serviceManager->getServices(TRUE);

  $data['user'] = [];
  $data['services'] = [];
  foreach ($enabledServices as $currentService) {
    /**
     * @var \Drupal\tarte_au_citron\ServicePluginBase $currentService
     */
    $currentService->addJs($attachments, $data['user']);
    \Drupal::moduleHandler()
      ->alter('tarte_au_citron_' . $currentService->getPluginId(), $attachments, $currentService);
    $data['services'][] = $currentService->getPluginDefinition()['id'];
  }
  if (!empty($data['services'])) {
    unset($data['services_settings']);
  }

  // Translate labels.
  $data['texts'] = \Drupal::config('tarte_au_citron.texts.settings')->get();
  unset($data['texts']['_core'], $data['texts']['langcode']);
  foreach ($data['texts'] as $keyText => $keyValue) {
    $label = t($keyValue)->render();
    if (strpos($keyText, 'engage-') === FALSE && strpos($keyText, '_') !== FALSE) {
      list($keyMain, $keySecond) = explode('_', $keyText);
      if (!isset($data['texts'][$keyMain])) {
        $data['texts'][$keyMain] = [];
      }
      if (is_array($data['texts'][$keyMain])) {
        $data['texts'][$keyMain][$keySecond] = $label;
        unset($data['texts'][$keyText]);
      }
      else {
        $data['texts'][$keyText] = $label;
      }
    }
    else {
      $data['texts'][$keyText] = $label;
    }
  }
  $attachments['#attached']['drupalSettings']['tarte_au_citron'] = $data;
}
